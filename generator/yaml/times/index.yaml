{'desc': 'secondary indexes on times',
 'table_variable_name': 'tbl',
 'tests': [{'def': {'js': 'ts={"timezone":"-07:00","epoch_time":1375445162.0872,"$reql__type$":"TIME"}',
                    'py': 'ts={"timezone":"-07:00","epoch_time":1375445162.0872,"$reql_type$":"TIME"}',
                    'rb': 'ts={"timezone"=>"-07:00","epoch_time"=>1375445162.0872,"$reql_type$"=>"TIME"}'}},
           {'def': {'js': 't1={"timezone":"-07:00","epoch_time":1375445163.0872,"$reql__type$":"TIME"}',
                    'py': 't1={"timezone":"-07:00","epoch_time":1375445163.0872,"$reql_type$":"TIME"}',
                    'rb': 't1={"timezone"=>"-07:00","epoch_time"=>1375445163.0872,"$reql_type$"=>"TIME"}'}},
           {'def': {'js': 't2={"timezone":"-07:00","epoch_time":1375445163.08832,"$reql__type$":"TIME"}',
                    'py': 't2={"timezone":"-07:00","epoch_time":1375445163.08832,"$reql_type$":"TIME"}',
                    'rb': 't2={"timezone"=>"-07:00","epoch_time"=>1375445163.08832,"$reql_type$"=>"TIME"}'}},
           {'def': {'js': 't3={"timezone":"-07:00","epoch_time":1375445163.08943,"$reql__type$":"TIME"}',
                    'py': 't3={"timezone":"-07:00","epoch_time":1375445163.08943,"$reql_type$":"TIME"}',
                    'rb': 't3={"timezone"=>"-07:00","epoch_time"=>1375445163.08943,"$reql_type$"=>"TIME"}'}},
           {'def': {'js': 't4={"timezone":"-07:00","epoch_time":1375445163.09055,"$reql__type$":"TIME"}',
                    'py': 't4={"timezone":"-07:00","epoch_time":1375445163.09055,"$reql_type$":"TIME"}',
                    'rb': 't4={"timezone"=>"-07:00","epoch_time"=>1375445163.09055,"$reql_type$"=>"TIME"}'}},
           {'def': {'js': 't5={"timezone":"-07:00","epoch_time":1375445163.09166,"$reql__type$":"TIME"}',
                    'py': 't5={"timezone":"-07:00","epoch_time":1375445163.09166,"$reql_type$":"TIME"}',
                    'rb': 't5={"timezone"=>"-07:00","epoch_time"=>1375445163.09166,"$reql_type$"=>"TIME"}'}},
           {'def': {'js': 'te={"timezone":"-07:00","epoch_time":1375445164.0872,"$reql__type$":"TIME"}',
                    'py': 'te={"timezone":"-07:00","epoch_time":1375445164.0872,"$reql_type$":"TIME"}',
                    'rb': 'te={"timezone"=>"-07:00","epoch_time"=>1375445164.0872,"$reql_type$"=>"TIME"}'}},
           {'def': {'cd': "trows = [{'id':t1}, {'id':t2}, {'id':t3}, {'id':t4}, {'id':t5}]",
                    'rb': 'trows = [{:id => t1}, {:id => t2}, {:id => t3}, {:id => t4}, {:id => t5}]'}},
           {'cd': "tbl.insert(trows)['inserted']",
            'js': "tbl.insert(trows)('inserted')",
            'ot': '5'},
           {'def': 'bad_insert = [{\'id\':r.expr(t1).in_timezone("Z")}]'},
           {'cd': "tbl.insert(bad_insert)['first_error']",
            'js': "tbl.insert(badInsert)('first__error')",
            'ot': '("Duplicate primary key `id`:\\n{\\n\\t\\"id\\":\\t{\\n\\t\\t\\"$reql_type$\\":\\t\\"TIME\\",\\n\\t\\t\\"epoch_time\\":\\t1375445163.087,\\n\\t\\t\\"timezone\\":\\t\\"-07:00\\"\\n\\t}\\n}\\n{\\n\\t\\"id\\":\\t{\\n\\t\\t\\"$reql_type$\\":\\t\\"TIME\\",\\n\\t\\t\\"epoch_time\\":\\t1375445163.087,\\n\\t\\t\\"timezone\\":\\t\\"+00:00\\"\\n\\t}\\n}")'},
           {'cd': 'tbl.between(ts, te).count()', 'ot': '5'},
           {'cd': 'tbl.between(t1, t4).count()', 'ot': '3'},
           {'cd': "tbl.between(t1, t4, :right_bound => 'closed').count()",
            'js': "tbl.between(t1, t4, {rightBound:'closed'}).count()",
            'ot': '4',
            'py': "tbl.between(t1, t4, right_bound='closed').count()"},
           {'cd': 'tbl.between(r.expr(ts).in_timezone("+06:00"), te).count()',
            'ot': '5'},
           {'cd': 'tbl.between(t1, r.expr(t4).in_timezone("+08:00")).count()',
            'ot': '3'},
           {'cd': 'tbl.between(r.expr(t1).in_timezone("Z"), t4, :right_bound => \'closed\').count()',
            'js': 'tbl.between(r.expr(t1).inTimezone("Z"), t4, {rightBound:\'closed\'}).count()',
            'ot': '4',
            'py': 'tbl.between(r.expr(t1).in_timezone("Z"), t4, right_bound=\'closed\').count()'},
           {'cd': "tbl.update{|row| {:a => row[:id]}}['replaced']",
            'js': "tbl.update(function(row) {return {'a':row('id')}})('replaced')",
            'ot': '5',
            'py': "tbl.update(lambda row:{'a':row['id']})['replaced']"},
           {'cd': "tbl.index_create('a')", 'ot': "({'created':1})"},
           {'cd': "tbl.index_wait('a').count()", 'ot': '1'},
           {'cd': "tbl.between(ts, te, :index => 'a').count()",
            'js': "tbl.between(ts, te, {index:'a'}).count()",
            'ot': '5',
            'py': "tbl.between(ts, te, index='a').count()"},
           {'cd': "tbl.between(t1, t4, :index => 'a').count()",
            'js': "tbl.between(t1, t4, {index:'a'}).count()",
            'ot': '3',
            'py': "tbl.between(t1, t4, index='a').count()"},
           {'cd': "tbl.between(t1, t4, :right_bound => 'closed', :index => 'a').count()",
            'js': "tbl.between(t1, t4, {rightBound:'closed', index:'a'}).count()",
            'ot': '4',
            'py': "tbl.between(t1, t4, right_bound='closed', index='a').count()"},
           {'cd': 'tbl.between(r.expr(ts).in_timezone("+06:00"), te, :index => \'a\').count()',
            'js': 'tbl.between(r.expr(ts).inTimezone("+06:00"), te, {index:\'a\'}).count()',
            'ot': '5',
            'py': 'tbl.between(r.expr(ts).in_timezone("+06:00"), te, index=\'a\').count()'},
           {'cd': 'tbl.between(t1, r.expr(t4).in_timezone("+08:00"), :index => \'a\').count()',
            'js': 'tbl.between(t1, r.expr(t4).inTimezone("+08:00"), {index:\'a\'}).count()',
            'ot': '3',
            'py': 'tbl.between(t1, r.expr(t4).in_timezone("+08:00"), index=\'a\').count()'},
           {'cd': 'tbl.between(r.expr(t1).in_timezone("Z"), t4, :right_bound => \'closed\', :index => \'a\').count()',
            'js': 'tbl.between(r.expr(t1).inTimezone("Z"), t4, {rightBound:\'closed\', index:\'a\'}).count()',
            'ot': '4',
            'py': 'tbl.between(r.expr(t1).in_timezone("Z"), t4, right_bound=\'closed\', index=\'a\').count()'},
           {'cd': "tbl.index_create('b'){|row| r.branch(row[:id] < t4, row[:a], null)}",
            'js': "tbl.indexCreate('b', function(row) { return r.branch(row('id').lt(t4), row('a'), null); })",
            'ot': "({'created':1})",
            'py': "tbl.index_create('b', lambda row:r.branch(row['id'] < t4, row['a'], null))"},
           {'cd': "tbl.index_wait('b').count()", 'ot': '1'},
           {'cd': "tbl.index_wait('b').count()", 'ot': '1'},
           {'cd': "tbl.between(ts, te, :index => 'b').count()",
            'js': "tbl.between(ts, te, {index:'b'}).count()",
            'ot': '3',
            'py': "tbl.between(ts, te, index='b').count()"},
           {'cd': "tbl.between(t1, t4, :index => 'b').count()",
            'js': "tbl.between(t1, t4, {index:'b'}).count()",
            'ot': '3',
            'py': "tbl.between(t1, t4, index='b').count()"},
           {'cd': "tbl.between(t1, t4, :right_bound => 'closed', :index => 'b').count()",
            'js': "tbl.between(t1, t4, {rightBound:'closed', index:'b'}).count()",
            'ot': '3',
            'py': "tbl.between(t1, t4, right_bound='closed', index='b').count()"},
           {'cd': 'tbl.between(r.expr(ts).in_timezone("+06:00"), te, :index => \'b\').count()',
            'js': 'tbl.between(r.expr(ts).inTimezone("+06:00"), te, {index:\'b\'}).count()',
            'ot': '3',
            'py': 'tbl.between(r.expr(ts).in_timezone("+06:00"), te, index=\'b\').count()'},
           {'cd': 'tbl.between(t1, r.expr(t4).in_timezone("+08:00"), :index => \'b\').count()',
            'js': 'tbl.between(t1, r.expr(t4).inTimezone("+08:00"), {index:\'b\'}).count()',
            'ot': '3',
            'py': 'tbl.between(t1, r.expr(t4).in_timezone("+08:00"), index=\'b\').count()'},
           {'cd': 'tbl.between(r.expr(t1).in_timezone("Z"), t4, :right_bound => \'closed\', :index => \'b\').count()',
            'js': 'tbl.between(r.expr(t1).inTimezone("Z"), t4, {rightBound:\'closed\', index:\'b\'}).count()',
            'ot': '3',
            'py': 'tbl.between(r.expr(t1).in_timezone("Z"), t4, right_bound=\'closed\', index=\'b\').count()'},
           {'def': {'js': 'oldtime = (new Date(1375147296.681*1000))',
                    'py': 'oldtime = datetime.fromtimestamp(1375147296.681, PacificTimeZone())',
                    'rb': 'oldtime = Time.at(1375147296.681)'}},
           {'def': {'js': 'curtime = (new Date())',
                    'py': 'curtime = datetime.now()',
                    'rb': 'curtime = Time.now'}},
           {'cd': "tbl.insert([{'id':oldtime}])['inserted']",
            'js': "tbl.insert([{'id':oldtime}])('inserted')",
            'ot': '1'},
           {'cd': "tbl.get(oldtime)['id'].type_of()",
            'js': "tbl.get(oldtime)('id').typeOf()",
            'ot': '("PTYPE<TIME>")'}]}
