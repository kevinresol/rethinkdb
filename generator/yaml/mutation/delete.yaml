{'desc': 'Tests deletes of selections',
 'table_variable_name': 'tbl',
 'tests': [{'js': 'tbl.insert(function(){\nvar res = []\nfor (var i = 0; i < 100; i++) {\nres.push({id: i});\n}\nreturn res;\n}())',
            'ot': "({'deleted':0,'replaced':0,'unchanged':0,'errors':0,'skipped':0,'inserted':100})",
            'py': "tbl.insert([{'id':i} for i in xrange(100)])",
            'rb': 'tbl.insert((1..100).map{ |i| {"id" => i} })'},
           {'cd': 'tbl.count()', 'ot': '100'},
           {'cd': 'tbl.get(12).delete()',
            'ot': "({'deleted':1,'replaced':0,'unchanged':0,'errors':0,'skipped':0,'inserted':0})"},
           {'js': "tbl.skip(50).delete({durability:'wrong'})",
            'ot': 'err(\'ReqlQueryLogicError\', \'Durability option `wrong` unrecognized (options are "hard" and "soft").\', [0])',
            'py': "tbl.skip(50).delete(durability='wrong')",
            'rb': "tbl.skip(50).delete({ :durability => 'wrong' })"},
           {'js': "tbl.skip(50).delete({durability:'soft'})",
            'ot': "({'deleted':49,'replaced':0,'unchanged':0,'errors':0,'skipped':0,'inserted':0})",
            'py': "tbl.skip(50).delete(durability='soft')",
            'rb': "tbl.skip(50).delete({ :durability => 'soft' })"},
           {'js': "tbl.delete({durability:'hard'})",
            'ot': "({'deleted':50,'replaced':0,'unchanged':0,'errors':0,'skipped':0,'inserted':0})",
            'py': "tbl.delete(durability='hard')",
            'rb': "tbl.delete({ :durability => 'hard' })"},
           {'cd': 'r.expr([1, 2]).delete()',
            'ot': "err('ReqlQueryLogicError', 'Expected type SELECTION but found DATUM:', [0])"}]}
