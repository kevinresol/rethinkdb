{'desc': 'Tests insertion with a write hook function',
 'table_variable_name': 'tbl',
 'tests': [{'js': "tbl.setWriteHook(function(a, b, c) { return c.merge({'num':1})})",
            'ot': "partial({'created': 1 })",
            'py': "tbl.set_write_hook(lambda a,b,c: c.merge({'num':1}))",
            'rb': "tbl.set_write_hook{ |a,b,c| c.merge({'num':1})}"},
           {'cd': "tbl.insert({'id': 1})",
            'ot': "partial({'inserted':1, 'errors':0})"},
           {'cd': 'tbl', 'ot': '[{"id": 1, "num": 1}]'},
           {'cd': 'tbl.set_write_hook(null)', 'ot': "partial({'deleted': 1 })"},
           {'js': "tbl.setWriteHook(function(a, b, c) { return c.merge({'num':1})})",
            'ot': "partial({'created': 1 })",
            'py': "tbl.set_write_hook(lambda a,b,c: c.merge({'num':2}))",
            'rb': "tbl.set_write_hook(lambda { |a,b,c| c.merge({'num':2})})"},
           {'js': "tbl.setWriteHook(function(a, b, c) { return c.merge({'num':2})})",
            'ot': "partial({'replaced': 1 })",
            'py': "tbl.set_write_hook(lambda a,b,c: c.merge({'num':2}))",
            'rb': "tbl.set_write_hook(lambda { |a,b,c| c.merge({'num':2})})"},
           {'cd': 'tbl.update({"blah":2})',
            'ot': "partial({'replaced':1, 'errors':0})"},
           {'cd': 'tbl', 'ot': '[{"id":1, "blah":2, "num":2}]'},
           {'cd': 'tbl.set_write_hook(null)', 'ot': "partial({'deleted': 1 })"},
           {'js': 'tbl.setWriteHook(function(b) { return 1;})',
            'ot': "err('ReqlQueryLogicError', 'Write hook functions must expect 3 arguments.')",
            'py': 'tbl.set_write_hook(lambda a: 1)',
            'rb': 'tbl.set_write_hook(lambda { |b| 1})'},
           {'js': 'tbl.setWriteHook(function(a, b, c) { return r.js(1);})',
            'ot': "err('ReqlQueryLogicError', 'Could not prove function deterministic.  Write hook functions must be deterministic.')",
            'py': 'tbl.set_write_hook(lambda a, b, c: r.js(1))',
            'rb': 'tbl.set_write_hook(lambda { |a, b, c| r.js(1)})'},
           {'js': 'tbl.setWriteHook(function(a, b, c) { return null;})',
            'ot': "partial({'created': 1 })",
            'py': 'tbl.set_write_hook(lambda a,b,c: null)',
            'rb': 'tbl.set_write_hook(lambda { |a,b,c| null})'},
           {'cd': 'tbl.insert({})',
            'ot': "partial({'first_error': 'A write hook function must not turn a replace/insert into a deletion.'})"},
           {'js': 'tbl.setWriteHook(function(a, b, c) { return {};})',
            'ot': "partial({'replaced': 1 })",
            'py': 'tbl.set_write_hook(lambda a,b,c: {})',
            'rb': 'tbl.set_write_hook(lambda { |a,b,c| {}})'},
           {'cd': 'tbl.delete()',
            'ot': "partial({'first_error': 'A write hook function must not turn a deletion into a replace/insert.'})"},
           {'cd': 'tbl.set_write_hook(null)', 'ot': "partial({'deleted': 1 })"},
           {'js': 'tbl.setWriteHook(function(a, b, c) { return r.error("OH NOES!")})',
            'ot': "partial({'created': 1 })",
            'py': 'tbl.set_write_hook(lambda a,b,c: r.error("OH NOES!"))',
            'rb': 'tbl.set_write_hook(lambda { |a,b,c| r.error("OH NOES!")})'},
           {'cd': 'tbl.insert({})',
            'ot': "partial({'first_error':'Error in write hook: OH NOES!'})"},
           {'cd': 'tbl.delete()',
            'ot': "partial({'first_error':'Error in write hook: OH NOES!'})"}]}
