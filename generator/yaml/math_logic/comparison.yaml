{'desc': 'Tests of comparison operators',
 'tests': [{'cd': 'r(1).lt(2)',
            'ot': 'true',
            'py': ['r.expr(1) < 2', '1 < r.expr(2)', 'r.expr(1).lt(2)'],
            'rb': ['r(1) < 2', 'r(1).lt(2)', '1 < r(2)']},
           {'cd': 'r(3).lt(2)',
            'ot': 'false',
            'py': 'r.expr(3) < 2',
            'rb': 'r(3) < 2'},
           {'js': 'r(2).lt(2)',
            'ot': 'false',
            'py': 'r.expr(2) < 2',
            'rb': 'r(2) < 2'},
           {'js': 'r(1).lt(2, 3, 4)', 'ot': 'true'},
           {'js': 'r(1).lt(2, 3, 2)', 'ot': 'false'},
           {'cd': 'r(1).gt(2)',
            'ot': 'false',
            'py': ['r.expr(1) > 2', '1 > r.expr(2)', 'r.expr(1).gt(2)'],
            'rb': ['r(1) > 2', 'r(1).gt(2)']},
           {'js': 'r(3).gt(2)',
            'ot': 'true',
            'py': 'r.expr(3) > 2',
            'rb': 'r(3) > 2'},
           {'js': 'r(2).gt(2)',
            'ot': 'false',
            'py': 'r.expr(2) > 2',
            'rb': 'r(2) > 2'},
           {'js': 'r(4).gt(3, 2, 1)', 'ot': 'true'},
           {'js': 'r(4).gt(3, 2, 3)', 'ot': 'false'},
           {'cd': 'r(1).eq(2)',
            'ot': 'false',
            'py': ['r.expr(1) == 2', '1 == r.expr(2)', 'r.expr(1).eq(2)'],
            'rb': 'r(1).eq 2'},
           {'js': 'r(3).eq(2)',
            'ot': 'false',
            'py': 'r.expr(3) == 2',
            'rb': 'r(3).eq 2'},
           {'js': 'r(2).eq(2)',
            'ot': 'true',
            'py': 'r.expr(2) == 2',
            'rb': 'r(2).eq 2'},
           {'js': 'r(1).eq(1, 1, 1)', 'ot': 'true'},
           {'js': 'r(1).eq(1, 2, 1)', 'ot': 'false'},
           {'cd': 'r(1).ne(2)',
            'ot': 'true',
            'py': ['r.expr(1) != 2', '1 != r.expr(2)', 'r.expr(1).ne(2)'],
            'rb': 'r(1).ne 2'},
           {'js': 'r(3).ne(2)',
            'ot': 'true',
            'py': 'r.expr(3) != 2',
            'rb': 'r(3).ne 2'},
           {'js': 'r(2).ne(2)',
            'ot': 'false',
            'py': 'r.expr(2) != 2',
            'rb': 'r(2).ne 2'},
           {'js': 'r(1).ne(3, 2, 4)', 'ot': 'true'},
           {'js': 'r(1).ne(3, 2, 3)', 'ot': 'true'},
           {'js': 'r(1).le(2)',
            'ot': 'true',
            'py': ['r.expr(1) <= 2', '1 <= r.expr(2)', 'r.expr(1).le(2)'],
            'rb': ['r(1) <= 2', 'r(1).le(2)']},
           {'js': 'r(3).le(2)',
            'ot': 'false',
            'py': 'r.expr(3) <= 2',
            'rb': 'r(3) <= 2'},
           {'js': 'r(2).le(2)',
            'ot': 'true',
            'py': 'r.expr(2) <= 2',
            'rb': 'r(2) <= 2'},
           {'js': 'r(1).le(1, 2, 2)', 'ot': 'true'},
           {'js': 'r(1).le(1, 3, 2)', 'ot': 'false'},
           {'cd': 'r(1).ge(2)',
            'ot': 'false',
            'py': ['r.expr(1) >= 2', '1 >= r.expr(2)', 'r.expr(1).ge(2)'],
            'rb': ['r(1) >= 2', 'r(1).ge(2)']},
           {'js': 'r(3).ge(2)',
            'ot': 'true',
            'py': 'r.expr(3) >= 2',
            'rb': 'r(3) >= 2'},
           {'js': 'r(2).ge(2)',
            'ot': 'true',
            'py': 'r.expr(2) >= 2',
            'rb': 'r(2) >= 2'},
           {'js': 'r(4).ge(4, 2, 2)', 'ot': 'true'},
           {'js': 'r(4).ge(4, 2, 3)', 'ot': 'false'},
           {'cd': 'r(null).eq(null)',
            'ot': 'true',
            'py': ['r.expr(null) == null', 'null == r.expr(null)']},
           {'cd': 'r(null).lt(null)',
            'ot': 'false',
            'py': ['r.expr(null) < null',
                   'null < r.expr(null)',
                   'r.expr(null).lt(null)'],
            'rb': 'r(null) < null'},
           {'cd': 'r(null).gt(null)',
            'ot': 'false',
            'py': ['r.expr(null) > null',
                   'null > r.expr(null)',
                   'r.expr(null).gt(null)'],
            'rb': 'r(null) > null'},
           {'cd': "r('a').eq('a')", 'ot': 'true', 'py': "r.expr('a') == 'a'"},
           {'cd': "r('a').eq('aa')",
            'ot': 'false',
            'py': "r.expr('a') == 'aa'"},
           {'cd': "r('a').lt('aa')", 'ot': 'true', 'py': "r.expr('a') < 'aa'"},
           {'cd': "r('a').lt('bb')", 'ot': 'true', 'py': "r.expr('a') < 'bb'"},
           {'cd': "r('bb').gt('a')", 'ot': 'true', 'py': "r.expr('bb') > 'a'"},
           {'cd': "r('abcdef').lt('abcdeg')",
            'ot': 'true',
            'py': "r.expr('abcdef') < 'abcdeg'"},
           {'cd': "r('abcdefg').gt('abcdeg')",
            'ot': 'false',
            'py': "r.expr('abcdefg') > 'abcdeg'"},
           {'js': "r('A quick brown fox').gt('A quick brawn fox')",
            'ot': 'true',
            'py': "r.expr('A quick brown fox') > 'A quick brawn fox'",
            'rb': "r('A quick brown fox') > 'A quick brawn fox'"},
           {'js': 'r([1]).lt([2])',
            'ot': 'true',
            'py': 'r.expr([1]) < [2]',
            'rb': 'r([1]) < [2]'},
           {'js': 'r([1]).gt([2])',
            'ot': 'false',
            'py': 'r.expr([1]) > [2]',
            'rb': 'r([1]) > [2]'},
           {'js': 'r([1, 0]).lt([2])',
            'ot': 'true',
            'py': 'r.expr([1, 0]) < [2]',
            'rb': 'r([1, 0]) < [2]'},
           {'js': 'r([1, 0]).lt([1])',
            'ot': 'false',
            'py': 'r.expr([1, 0]) < [1]',
            'rb': 'r([1, 0]) < [1]'},
           {'js': 'r([1, 0]).gt([0])',
            'ot': 'true',
            'py': 'r.expr([1, 0]) > [0]',
            'rb': 'r([1, 0]) > [0]'},
           {'js': "r([1, 'a']).lt([1, 'b'])",
            'ot': 'true',
            'py': "r.expr([1, 'a']) < [1, 'b']",
            'rb': "r([1, 'a']) < [1, 'b']"},
           {'js': "r([0, 'z']).lt([1, 'b'])",
            'ot': 'true',
            'py': "r.expr([0, 'z']) < [1, 'b']",
            'rb': "r([0, 'z']) < [1, 'b']"},
           {'js': 'r([1, 1, 1]).lt([1, 0, 2])',
            'ot': 'false',
            'py': 'r.expr([1, 1, 1]) < [1, 0, 2]',
            'rb': 'r([1, 1, 1]) < [1, 0, 2]'},
           {'js': 'r([1, 0, 2]).lt([1, 1, 1])',
            'ot': 'true',
            'py': 'r.expr([1, 0, 2]) < [1, 1, 1]',
            'rb': 'r([1, 0, 2]) < [1, 1, 1]'},
           {'cd': "r({'a':0}).eq({'a':0})",
            'ot': 'true',
            'py': "r.expr({'a':0}) == {'a':0}"},
           {'cd': "r({'a':0, 'b':1}).eq({'b':1, 'a':0})",
            'ot': 'true',
            'py': "r.expr({'a':0, 'b':1}) == {'b':1, 'a':0}"},
           {'cd': "r({'a':0, 'b':1, 'c':2}).eq({'b':1, 'a':0})",
            'ot': 'false',
            'py': "r.expr({'a':0, 'b':1, 'c':2}) == {'b':1, 'a':0}"},
           {'cd': "r({'a':0, 'b':1}).eq({'b':1, 'a':0, 'c':2})",
            'ot': 'false',
            'py': "r.expr({'a':0, 'b':1}) == {'b':1, 'a':0, 'c':2}"},
           {'cd': "r({'a':0, 'b':1, 'd':2}).eq({'b':1, 'a':0, 'c':2})",
            'ot': 'false',
            'py': "r.expr({'a':0, 'b':1, 'd':2}) == {'b':1, 'a':0, 'c':2}"},
           {'cd': "r({'a':0}).lt({'b':0})",
            'ot': 'true',
            'py': "r.expr({'a':0}) < {'b':0}"},
           {'cd': "r({'a':1}).lt({'b':0})",
            'ot': 'true',
            'py': "r.expr({'a':1}) < {'b':0}"},
           {'cd': "r({'b':1}).lt({'b':0})",
            'ot': 'false',
            'py': "r.expr({'b':1}) < {'b':0}"},
           {'cd': "r({'b':1}).lt({'a':0})",
            'ot': 'false',
            'py': "r.expr({'b':1}) < {'a':0}"},
           {'cd': "r({'a':0, 'b':1, 'c':2}).lt({'a':0, 'b':1, 'c':2})",
            'ot': 'false',
            'py': "r.expr({'a':0, 'b':1, 'c':2}) < {'a':0, 'b':1, 'c':2}"},
           {'cd': "r({'a':0, 'b':1, 'c':2, 'd':3}).lt({'a':0, 'b':1, 'c':2})",
            'ot': 'false',
            'py': "r.expr({'a':0, 'b':1, 'c':2, 'd':3}) < {'a':0, 'b':1, 'c':2}"},
           {'cd': "r({'a':0, 'b':1, 'c':2}).lt({'a':0, 'b':1, 'c':2, 'd':3})",
            'ot': 'true',
            'py': "r.expr({'a':0, 'b':1, 'c':2}) < {'a':0, 'b':1, 'c':2, 'd':3}"},
           {'cd': "r({'a':0, 'c':2}).lt({'a':0, 'b':1, 'c':2})",
            'ot': 'false',
            'py': "r.expr({'a':0, 'c':2}) < {'a':0, 'b':1, 'c':2}"},
           {'cd': "r({'a':0, 'c':2}).gt({'a':0, 'b':1, 'c':2})",
            'ot': 'true',
            'py': "r.expr({'a':0, 'c':2}) > {'a':0, 'b':1, 'c':2}"},
           {'def': {'js': 'everything = r.expr([[],r.now(),r.binary(Buffer("\\x00")),false,null,-5,{},"a",r.maxval])',
                    'py': 'everything = r.expr([[],r.now(),r.binary(b"\\x00"),false,null,-5,{},"a",r.maxval])',
                    'rb': 'everything = r.expr([[],r.now(),r.binary("\\x00"),false,null,-5,{},"a",r.maxval])'}},
           {'js': 'r.and(r.args(everything.map(r.lt(r.minval, r.row))))',
            'ot': 'true',
            'py': 'r.and_(r.args(everything.map(r.lt(r.minval, r.row))))',
            'rb': 'r.and(r.args(everything.map{|x| r.lt(r.minval, x)}))'},
           {'js': 'r.or(r.args(everything.map(r.gt(r.minval, r.row))))',
            'ot': 'false',
            'py': 'r.or_(r.args(everything.map(r.gt(r.minval, r.row))))',
            'rb': 'r.or(r.args(everything.map{|x| r.gt(r.minval, x)}))'},
           {'cd': 'r.eq(r.minval, r.minval)', 'ot': 'true'},
           {'js': 'r([]).lt(true)',
            'ot': 'true',
            'py': 'r.expr([]) < True',
            'rb': 'r([]) < true'},
           {'js': 'r([1,2]).lt(false)',
            'ot': 'true',
            'py': 'r.expr([1,2]) < False',
            'rb': 'r([1,2]) < false'},
           {'js': 'r(false).lt([])',
            'ot': 'false',
            'py': 'r.expr(False) < []',
            'rb': 'r(false) < []'},
           {'js': 'r([]).lt(r.binary(Buffer("\\x00")))',
            'ot': 'true',
            'py': 'r.expr([]) < r.binary(b"\\xAE")',
            'rb': 'r([]) < r.binary("")'},
           {'js': 'r([1,2]).lt(r.binary(Buffer("\\x00")))',
            'ot': 'true',
            'py': 'r.expr([1,2]) < r.binary(b"\\xAE")',
            'rb': 'r([1,2]) < r.binary("")'},
           {'js': 'r(true).lt(null)',
            'ot': 'true',
            'py': 'True < r.expr(null)',
            'rb': 'r(true) < null'},
           {'js': 'r(null).gt([])',
            'ot': 'true',
            'py': 'r.expr(null) > []',
            'rb': 'r(null) > []'},
           {'js': 'r(null).lt(12)',
            'ot': 'true',
            'py': 'r.expr(null) < 12',
            'rb': 'r(null) < 12'},
           {'js': 'r(null).lt(-2)',
            'ot': 'true',
            'py': 'r.expr(null) < -2',
            'rb': 'r(null) < -2'},
           {'js': 'r(-12).lt({})',
            'ot': 'true',
            'py': 'r.expr(-12) < {}',
            'rb': 'r(-12) < {}'},
           {'js': 'r(100).lt({a:-12})',
            'ot': 'true',
            'py': "r.expr(100) < {'a':-12}",
            'rb': 'r(100) < { :a => 12 }'},
           {'js': 'r(r.binary(Buffer("\\x00"))).lt(12)',
            'ot': 'false',
            'py': 'r.expr(r.binary(b"\\xAE")) < 12',
            'rb': 'r(r.binary("")) < 12'},
           {'js': 'r.binary(Buffer("0x00")).lt(\'abc\')',
            'ot': 'true',
            'py': 'r.binary(b"0xAE") < \'abc\'',
            'rb': 'r.binary("") < \'abc\''},
           {'js': 'r.binary(Buffer("0x00")).gt(r.now())',
            'ot': 'false',
            'py': 'r.binary(b"0xAE") > r.now()',
            'rb': 'r.binary("") > r.now()'},
           {'cd': 'r.now() > 12', 'js': 'r.now().gt(12)', 'ot': 'true'},
           {'cd': "r.now() > 'abc'", 'js': "r.now().gt('abc')", 'ot': 'false'},
           {'js': "r('abc').gt({a:-12})",
            'ot': 'true',
            'py': 'r.expr("abc") > {\'a\':-12}',
            'rb': "r('abc') > { :a => 12 }"},
           {'js': "r('abc').gt({abc:'abc'})",
            'ot': 'true',
            'py': 'r.expr("abc") > {\'abc\':\'abc\'}',
            'rb': "r('abc') > { :abc => 'abc' }"},
           {'js': "r('zzz').gt(128)",
            'ot': 'true',
            'py': "r.expr('zzz') > 128",
            'rb': "r('zzz') > 128"},
           {'js': "r('zzz').gt({})",
            'ot': 'true',
            'py': "r.expr('zzz') > {}",
            'rb': "r('zzz') > {}"},
           {'js': "r('zzz').gt(-152)",
            'ot': 'true',
            'py': "'zzz' > r.expr(-152)",
            'rb': "r('zzz') > -152"},
           {'js': "r('zzz').gt(null)",
            'ot': 'true',
            'py': "'zzz' > r.expr(null)",
            'rb': "r('zzz') > null"},
           {'js': "r('zzz').gt([])",
            'ot': 'true',
            'py': "'zzz' > r.expr([])",
            'rb': "r('zzz') > []"},
           {'def': {'js': 'everything2 = r.expr([r.minval,[],r.now(),r.binary(Buffer("\\x00")),false,null,-5,{},"a"])',
                    'py': 'everything2 = r.expr([r.minval,[],r.now(),r.binary(b"\\x00"),false,null,-5,{},"a"])',
                    'rb': 'everything2 = r.expr([r.minval,[],r.now(),r.binary("\\x00"),false,null,-5,{},"a"])'}},
           {'js': 'r.and(r.args(everything2.map(r.gt(r.maxval, r.row))))',
            'ot': 'true',
            'py': 'r.and_(r.args(everything2.map(r.gt(r.maxval, r.row))))',
            'rb': 'r.and(r.args(everything2.map{|x| r.gt(r.maxval, x)}))'},
           {'js': 'r.or(r.args(everything2.map(r.lt(r.maxval, r.row))))',
            'ot': 'false',
            'py': 'r.or_(r.args(everything2.map(r.lt(r.maxval, r.row))))',
            'rb': 'r.or(r.args(everything2.map{|x| r.lt(r.maxval, x)}))'},
           {'cd': 'r.eq(r.maxval, r.maxval)', 'ot': 'true'}]}
